<?php if (!defined('BASEPATH')) exit('No direct script access allowed');/*** Content Control Panel* * Displays all control panel forms, datasets, and other displays** @author Weblight.ro* @copyright Weblight.ro* @package BJ Tool**/class Admincp extends Admincp_Controller {                	function __construct()	{		parent::__construct();						$this->admin_navigation->parent_active('livescore');                                				//error_reporting(E_ALL^E_NOTICE);		//error_reporting(E_WARNING);	}                function index ()         {            redirect('admincp/livescore/list_competitions');			}	function list_matches()        {            echo 'Urmeaza...';                    }                function parse_matches()        {            $this->load->library('admin_form');            $form = new Admin_form;            $form->fieldset('Add Livescore link');            $form->text('Link', 'link', '', 'link to be introduced', TRUE, 'e.g., http://www.livescore.com/soccer/2013-07-22/', TRUE);            $data = array(                            'form' => $form->display(),                            'form_title' => 'Add Livescore link',                            'form_action' => site_url('admincp/livescore/parse_matches_validate'),                            'action' => 'new',                        );                        $this->load->view('parse_matches',$data);        }                function parse_matches_validate()        {            $this->load->library('form_validation');            $this->form_validation->set_rules('link','Link','required|trim');            if ($this->form_validation->run() === FALSE) {                    $this->notices->SetError('Required fields.');                    $error = TRUE;            }            if (isset($error)) {                                                redirect('admincp/livescore/parse_matches');                            return FALSE;		}            $link   = $this->input->post('link');            $link = utf8_encode($link);                        $this->parse_info($link);                        echo '<br/><div align="center"><a href="http://betz.banujos.ro/admincp/livescore/parse_matches">Back</a></div>';            return TRUE;        }	private function parse_info($link)         {                                   $link = utf8_decode($link);            $page = $this->getUrl($link);            $countries = $teams = $score = $competitions = array();                        $this->load->model('competition_model');            $this->load->model('country_model');            $this->load->model('team_model');            //$pattern = '|<dt>(.*?)</dt>[\s\S]*?<dd>([\s\S]*?)</dd>|';                        $pattern = '@<span class="league">\s*<a href=".*"><strong>(.*)</strong></a>@';            preg_match_all($pattern, $page, $countries);            print '<pre>COUNTRIES';            print_r($countries);                                                if(!isset($countries[1][0])) {                $pattern = '@<span class="league">\s*<strong>(.*)</strong>@';                preg_match_all($pattern, $page, $countries);                print '<pre>COUNTRIES';                print_r($countries);                $country_name = $countries[1][0];            } else {                $country_name = $countries[1][0];            }                        echo "country_name = $country_name<br/>";            $country_id = $this->country_model->get_country_by_name($country_name);                        $pattern = '@<td class="f(h|a){1}">\s*(.*)\s*</td>@';            preg_match_all($pattern, $page, $teams);            print '<pre>TEAMS';            print_r($teams);                        foreach($teams[2] as $team){                //echo "team $team start<br/>";                $team = trim($team);                $team_param = array(                    'name' => $team,                    'country_id' => $country_id,                );                                echo "country_id = $country_id<br/>";                                if($country_id) {                        if(!$this->team_model->team_exists($team_param)) {                                            $this->team_model->new_team($team_param);                        echo 'team NOT exists '.$team.'<br/>';                    }else {                        echo 'team exists '.$team.'<br/>';                    }                } else {                    'echo team country not found'.$team.'<br/>';                }                             //echo "team $team ends<br/>";               }            preg_match_all('@<span class="league">(\s)*<a href="(.*)"><strong>(.*)</strong></a>(\s)*- <span><a href=".*>(.*)</a>@', $page, $competitions);            print '<pre>COMPETITIONS';            print_r($competitions);            if(empty($competitions[3])) {                preg_match_all('@<span class="league">(\s)*<a href="(.*)"><strong>(.*)</strong></a>(\s)*- <span>(.*)</span>@', $page, $competitions);            }            foreach($competitions[3] as $key=>$val){                echo 'COMPETITION '.$val.' '.utf8_decode($competitions[5][$key]).'<br/>';                                            }                        $leagues = array();            preg_match_all('@<span class="league">\s*<a href="(.*)">@',$page,$leagues);            //print '<pre>';            //print_r($leagues);            foreach($leagues[1] as $key=>$val) {                //            }            preg_match_all('@<td class="fd">\s*([a-zA-Z]*)\s*</td>\s*<td class="fh">\s*([a-zA-Z\s\*]*)\s*</td>\s*<td class="fs">\s*<a href="(.*)" class="scorelink">\s*(.*)\s*</a>\s*</td>\s*<td class="fa">\s*(.*)\s*</td>@',$page,$score);                                    foreach($score[3] as $key=>$val){                $score[3][$key] = str_replace('/soccer/','',$score[3][$key]);                $aux = explode('/',$score[3][$key]);                                $competitions[$aux[0].'/'.$aux[1]]['name'] = ucfirst($aux[1]);                $competitions[$aux[0].'/'.$aux[1]]['link'] = $aux[0].'/'.$aux[1];                $competitions[$aux[0].'/'.$aux[1]]['link_complete'] = 'http://www.livescore.com/soccer/'.$aux[0].'/'.$aux[1].'/';                $competitions[$aux[0].'/'.$aux[1]]['country_id'] = $this->country_model->get_country_by_name(ucfirst($aux[0]));                            }            //$competitions = array_unique($competitions);                        print '<pre>MATCHES';            print_r($score[3]);            print_r($competitions);                                   $competitions[2][0] = substr($competitions[2][0],1,-1);            $competition_param = array(                    'link' => $competitions[2][0],                     'name' => $competitions[3][0].'-'.$competitions[5][0],                );                        if(!strstr($link,'2013')) {                $aux = str_replace('http://www.livescore.com/soccer/','',$link);                $aux = substr($aux,0,-1);                $competition_param['link'] = $aux;                $competition_param['link_complete'] = $link;            }                        $country_id = $this->country_model->get_country_by_name($competitions[3][0]);            if($country_id) $competition_param['country_id'] = $country_id;                                                            if($competition_param['link']){                if(!$this->competition_model->competition_exists($competition_param)) {                    $this->competition_model->new_competition($competition_param);                    echo 'competition NOT exists '.$competitions[2][0].'<br/>';                }else {                    echo 'competition exists '.$competitions[2][0].'<br/>';                }             } else {                echo 'competition NO link '.$competitions[2][0].'<br/>';            }                                                                       	}                private function getUrl($url)        {                $cUrl = curl_init();                $headers[] = 'Connection: Keep-Alive';                $headers[] = 'Content-type: application/x-www-form-urlencoded;charset=UTF-8';				                curl_setopt($cUrl, CURLOPT_HTTPHEADER, $headers);                 curl_setopt($cUrl, CURLOPT_URL,$url);                //curl_setopt($cUrl, CURLOPT_HTTPGETGET,1);                //curl_setopt($cUrl, CURLOPT_USERAGENT,'Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 6.2; Trident/4.0; SLCC2; .NET CLR 2.0.50727; .NET CLR 3.5.30729; .NET CLR 3.0.30729; Media Center PC 6.0)'); 	                //curl_setopt($cUrl, CURLOPT_USERAGENT,$_SERVER['HTTP_USER_AGENT']); 	                curl_setopt($cUrl, CURLOPT_RETURNTRANSFER, 1);                //curl_setopt($cUrl, CURLOPT_TIMEOUT, '3');                //$pageContent = trim(curl_exec($cUrl));                $pageContent = curl_exec($cUrl);                curl_close($cUrl);                return $pageContent;        }                function list_competitions()        {            $this->admin_navigation->module_link('Fix competitions',site_url('admincp/livescore/fix_competitions'));                $this->admin_navigation->module_link('Add competition',site_url('admincp/livescore/add_competition'));                        $this->load->library('dataset');            $columns = array(                                array(                                        'name' => 'NAME',                                        'type' => 'name',                                        'width' => '15%',                                                                                ),                                array(                                        'name' => 'LINK',                                        'width' => '15%',                                                                                'type' => 'text'                                        ),                                              array(                                        'name' => 'LINK COMPLETE',                                        'width' => '40%',                                                                                'type' => 'text'                                        ),                                         array(                                        'name' => 'COUNTRY',                                        'width' => '15%',                                                                                'filter' => 'country_name',                                        'type' => 'text',                                                                                'sort_column' => 'country_name',                                        ),                                                                                 array(                                        'name' => 'EDIT',                                        'width' => '15%',                                                                                'type' => 'text',                                        ),                                );                            $filters = array();                    $filters['limit'] = 20;                if(isset($_GET['offset'])) $filters['offset'] = $_GET['offset'];                                 if(isset($_GET['country_name'])) $filters['country_name'] = $_GET['country_name'];								$this->dataset->columns($columns);		$this->dataset->datasource('competition_model','get_competitions',$filters);		$this->dataset->base_url(site_url('admincp/livescore/list_competitions'));                $this->dataset->rows_per_page($filters['limit']);	                // total rows		$total_rows = $this->db->get('z_competitions')->num_rows(); 		$this->dataset->total_rows($total_rows);               		// initialize the dataset		$this->dataset->initialize();                               // add actions		$this->dataset->action('Delete','admincp/livescore/delete_competition');                                $this->load->view('list_competitions');        }                function add_competition()        {                        $this->load->library('admin_form');            $form = new Admin_form;            $this->load->model('country_model');            $countries = $params = array();            $countries = $this->country_model->get_countries($params);            $countries = array_merge(array('Select country'),$countries);	    	                        $form->fieldset('Add Competition');            $form->text('Competition name', 'name', '', 'Competition name to be introduced', TRUE, 'e.g., Bundesliga', TRUE);            $form->text('Link', 'link', '', 'Link', TRUE, 'e.g., russia/premier-league', TRUE);                       $form->text('Link complete', 'link_complete', '', 'Link complete', TRUE, 'e.g., http://www.livescore.com/soccer/russia/premier-league/', TRUE);            $form->dropdown('Country','country_id', $countries);                                                            $data = array(                            'form' => $form->display(),                            'form_title' => 'Add competition',                            'form_action' => site_url('admincp/livescore/add_competition_validate'),                            'action' => 'new',                        );                        $this->load->view('add_competition',$data);        }                function add_competition_validate($action = 'new', $id = false)         {		$this->load->library('form_validation');		$this->form_validation->set_rules('name','Nume','required|trim');                $this->form_validation->set_rules('link','Link','required|trim');                $this->form_validation->set_rules('country_id','Country','required|trim');                				if ($this->form_validation->run() === FALSE) {			$this->notices->SetError('Required fields.');			$error = TRUE;		}				if (isset($error)) {			if ($action == 'new') {				redirect('admincp/livescore/list_competitions');				return FALSE;			}			else {				redirect('admincp/livescore/edit_competition/' . $id);				return FALSE;			}			}		$this->load->model('competition_model');                                $fields['name']             = $this->input->post('name');                $fields['link']             = $this->input->post('link');                $fields['link_complete']    = $this->input->post('link_complete');                $fields['country_id']       = $this->input->post('country_id');		if ($action == 'new') {			$type_id = $this->competition_model->new_competition($fields);														$this->notices->SetNotice('Competition added successfully.');			redirect('admincp/livescore/list_competitions/');		}		else {			$this->competition_model->update_competition($fields,$id);														$this->notices->SetNotice('Competition updated successfully.');			redirect('admincp/livescore/list_competitions/');		}				return TRUE;			}        function edit_competition ($id)         {                		$this->load->model('competition_model');		$competition = $this->competition_model->get_competition($id);		if (empty($competition)) {			die(show_error('No competition with this ID.'));		}                $this->load->library('admin_form');		$form = new Admin_form;                $this->load->model('country_model');                $countries = $params = array();                $countries = $this->country_model->get_countries($params);                $countries = array_merge(array('Select country'),$countries);		$form->fieldset('Competition');                $form->text('Name', 'name', $competition['name'], 'Competition name to be introduced', TRUE, 'e.g., Bundesliga', TRUE);                $form->text('Link', 'link', $competition['link'], 'Competition link', TRUE, 'e.g., russia/premier-league', TRUE);                $form->text('Link complete', 'link_complete', $competition['link_complete'], 'Competition link complete', TRUE, 'e.g., http://www.livescore.com/soccer/russia/premier-league/', TRUE);                $form->dropdown('Country','country_id', $countries,$competition['country_id']);				$data = array(					'form' => $form->display(),					'form_title' => 'Edit Competition',					'form_action' => site_url('admincp/livescore/add_competition_validate/edit/'. $competition['competition_id']),					'action' => 'edit',                                        					);				$this->load->view('add_competition',$data);				}                function delete_competition ($contents,$return_url)         {				$this->load->library('asciihex');		$this->load->model('competition_model');				$contents = unserialize(base64_decode($this->asciihex->HexToAscii($contents)));		$return_url = base64_decode($this->asciihex->HexToAscii($return_url));				foreach ($contents as $content) {                        $this->load->model('competition_model');                        $this->competition_model->delete_competition($content);					}		       					$this->notices->SetNotice('Competition deleted successfully.');						redirect($return_url);				return TRUE;		}        function list_teams()        {            $this->admin_navigation->module_link('Add team',site_url('admincp/livescore/add_team'));                        $this->load->library('dataset');            $columns = array(                                array(                                        'name' => 'NAME',                                        'type' => 'name',                                        'width' => '15%',                                                                                ),                                                               array(                                        'name' => 'COUNTRY',                                        'width' => '15%',                                                                                'filter' => 'country_name',                                        'type' => 'text',                                                                                'sort_column' => 'country_name',                                        ),                                                                                 array(                                        'name' => 'EDIT',                                        'width' => '15%',                                                                                'type' => 'text',                                        ),                                );                            $filters = array();                    $filters['limit'] = 20;                if(isset($_GET['offset'])) $filters['offset'] = $_GET['offset'];                                 if(isset($_GET['country_name'])) $filters['country_name'] = $_GET['country_name'];								$this->dataset->columns($columns);		$this->dataset->datasource('team_model','get_teams',$filters);		$this->dataset->base_url(site_url('admincp/livescore/list_teams'));                $this->dataset->rows_per_page($filters['limit']);	                // total rows		$total_rows = $this->db->get('z_teams')->num_rows(); 		$this->dataset->total_rows($total_rows);               		// initialize the dataset		$this->dataset->initialize();                               // add actions		$this->dataset->action('Delete','admincp/livescore/delete_team');                                $this->load->view('list_teams');        }                 function add_team()        {                        $this->load->library('admin_form');            $form = new Admin_form;            $this->load->model('country_model');            $countries = $params = array();            $countries = $this->country_model->get_countries($params);            $countries = array_merge(array('Select country'),$countries);	    	                        $form->fieldset('Add Team');            $form->text('Team name', 'name', '', 'Team name to be introduced', TRUE, 'e.g., AC Milan', TRUE);                        $form->dropdown('Country','country_id', $countries);                                                            $data = array(                            'form' => $form->display(),                            'form_title' => 'Add team',                            'form_action' => site_url('admincp/livescore/add_team_validate'),                            'action' => 'new',                        );                        $this->load->view('add_team',$data);        }                function add_team_validate($action = 'new', $id = false)         {		$this->load->library('form_validation');		$this->form_validation->set_rules('name','Name','required|trim');                                $this->form_validation->set_rules('country_id','Country','required|trim');                				if ($this->form_validation->run() === FALSE) {			$this->notices->SetError('Required fields.');			$error = TRUE;		}				if (isset($error)) {			if ($action == 'new') {				redirect('admincp/livescore/list_teams');				return FALSE;			}			else {				redirect('admincp/livescore/edit_team/' . $id);				return FALSE;			}			}		$this->load->model('team_model');                                $fields['name']             = $this->input->post('name');                               $fields['country_id']       = $this->input->post('country_id');		if ($action == 'new') {			$team_id = $this->team_model->new_team($fields);														$this->notices->SetNotice('Team added successfully.');			redirect('admincp/livescore/list_teams/');		}		else {			$this->team_model->update_team($fields,$id);														$this->notices->SetNotice('Team updated successfully.');			redirect('admincp/livescore/list_teams/');		}				return TRUE;			}                function edit_team ($id)         {                		$this->load->model('team_model');		$team = $this->team_model->get_team($id);		if (empty($team)) {			die(show_error('No team with this ID.'));		}                $this->load->library('admin_form');		$form = new Admin_form;                $this->load->model('team_model');                $countries = $params = array();                $countries = $this->country_model->get_countries($params);                $countries = array_merge(array('Select country'),$countries);		$form->fieldset('Team');                $form->text('Name', 'name', $team['name'], 'Team name to be introduced', TRUE, 'e.g., AC Milan', TRUE);                                $form->dropdown('Country','country_id', $countries,$team['country_id']);				$data = array(					'form' => $form->display(),					'form_title' => 'Edit Team',					'form_action' => site_url('admincp/livescore/add_team_validate/edit/'. $team['team_id']),					'action' => 'edit',                                        					);				$this->load->view('add_team',$data);				}                function delete_team ($contents,$return_url)         {				$this->load->library('asciihex');		$this->load->model('competition_model');				$contents = unserialize(base64_decode($this->asciihex->HexToAscii($contents)));		$return_url = base64_decode($this->asciihex->HexToAscii($return_url));				foreach ($contents as $content) {                        $this->load->model('team_model');                        $this->team_model->delete_team($content);					}		       					$this->notices->SetNotice('Team deleted successfully.');						redirect($return_url);				return TRUE;		}                function fix_competitions()        {            $this->load->model('competition_model');            $this->competition_model->fix_competitions();            $return_url = 'admincp/livescore/list_competitions';            $this->notices->SetNotice('Table competitions fixed successfully.');				            redirect($return_url);            return TRUE;        }}